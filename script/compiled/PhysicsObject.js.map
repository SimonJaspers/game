{"version":3,"sources":["script/PhysicsObject.js"],"names":[],"mappings":";;;;;;IAAM,aAAa;AAEP,UAFN,aAAa,CAEN,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;wBAFlC,aAAa;;AAGjB,MAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,MAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;AAEjB,MAAI,CAAC,MAAM,GAAG,CACb,UAAS,MAAM,EAAE;AAChB,OAAI,IAAI,GAAG,KAAK,CAAC;AACjB,OAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvC,OAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;AAEvC,UAAO,IAAI,MAAM,CAChB,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EACzC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CACzC,CAAC;GACF,CACD,CAAC;;AAEF,MAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACjC,MAAI,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9B,MAAI,CAAC,YAAY,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACrC;;cAvBI,aAAa;;SAyBd,gBAAG;;;AAEN,OAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAC1B,GAAG,CAAC,UAAA,WAAW;WAAI,WAAW,OAAM;IAAA,CAAC,CACrC,MAAM,CAAC,UAAC,KAAK,EAAE,GAAG;WAAK,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC;IAAA,EAAE,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;AAE3D,OAAI,CAAC,YAAY,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;AAC/C,OAAI,CAAC,YAAY,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;;AAE/C,OAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;;AAElC,OAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;AACrC,OAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;GACrC;;;QAtCI,aAAa","file":"script/PhysicsObject.js","sourcesContent":["class PhysicsObject {\n\t\n\tconstructor(width, height, mass, x, y) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.mass = mass;\n\t\t\n\t\tthis.forces = [\n\t\t\tfunction(vector) {\n\t\t\t\tvar DRAG = 0.006;\n\t\t\t\tvar dirX = vector.speed.x > 0 ? -1 : 1;\n\t\t\t\tvar dirY = vector.speed.y > 0 ? -1 : 1;\n\t\t\t\t\n\t\t\t\treturn new Vector(\n\t\t\t\t\tdirX * DRAG * Math.pow(vector.speed.x, 2),\n\t\t\t\t\tdirY * DRAG * Math.pow(vector.speed.y, 2)\n\t\t\t\t);\n\t\t\t}\n\t\t];\n\t\t\n\t\tthis.position = new Vector(x, y);\n\t\tthis.speed = new Vector(0, 0);\n\t\tthis.acceleration = new Vector(0, 0);\n\t}\n\t\n\tnext() {\n\t\t\n\t\tvar totalForce = this.forces\n\t\t\t.map(forceMethod => forceMethod(this))\n\t\t\t.reduce((force, sum) => sum.add(force), new Vector(0, 0));\n\t\t\n\t\tthis.acceleration.x = totalForce.x / this.mass;\n\t\tthis.acceleration.y = totalForce.y / this.mass;\n\t\t\t\t\n\t\tthis.speed.add(this.acceleration);\n\t\t\n\t\tthis.position.x += this.speed.x / 60;\n\t\tthis.position.y += this.speed.y / 60;\n\t}\n\t\n}"]}